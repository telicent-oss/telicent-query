name: publish.yaml

on:
  push:
    branches:
      - main
    paths:
      - CHANGELOG.md
  workflow_dispatch:

jobs:
  app_details:
    runs-on: ubuntu-latest
    outputs:
      current_version: ${{ steps.npm_get_version_action.outputs.current-version }}
      app_name: ${{ steps.app_config.outputs.app_name }}
      image_name: ${{ steps.app_config.outputs.image_name }}
      repo_name: ${{ steps.app_config.outputs.repo_name }}
    steps:
      - uses: actions/checkout@v4
      - id: npm_get_version_action
        uses: martinbeentjes/npm-get-version-action@main
      - run: sudo apt-get install jq
      - id: app_config
        run: |
          APP_NAME=$(jq -r '.app_name // error("app_name missing")' ./src/app.config.json) && \
            echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT;
          IMAGE_NAME=$(jq -r '.image_name // error("image_name missing")' ./src/app.config.json) && \
            echo "image_name=$IMAGE_NAME" >> $GITHUB_OUTPUT;
          REPO_NAME=$(jq -r '.repo_name // error("repo_name missing")' ./src/app.config.json) && \
            echo "repo_name=$REPO_NAME" >> $GITHUB_OUTPUT;

  run_tests:
    permissions:
      id-token: write
      contents: read
      packages: write
    needs:
      - app_details
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.14
      - run: echo "version=$(node -v)" >> $GITHUB_OUTPUT
      - run: LOCAL_MACHINE=false yarn install --network-concurrency 1 # Network concurrency to avoid rate-limiting
      - run: yarn global add jest && yarn test:ci

  shared-workflows__vulnerability-scanning-on-repo:
    needs:
      - app_details
      - run_tests
    uses: telicent-oss/shared-workflows/.github/workflows/vulnerability-scanning-on-repo.yml@main
    with:
      APP_NAME: ${{ needs.app_details.outputs.app_name }}
    secrets: inherit

  build_and_upload_artifacts:
    permissions:
      id-token: write
      contents: read
      packages: write
    needs:
      - run_tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 20.14
      - run: LOCAL_MACHINE=false yarn install --network-concurrency 1 # Network concurrency to avoid rate-limiting
      - run: yarn build:tailwind && LOCAL_MACHINE=false yarn build
      - uses: actions/upload-artifact@v4
        with:
          name: build
          path: ./build

  shared-workflows__docker-push-to-registries:
    needs:
      - app_details
      - build_and_upload_artifacts
    uses: telicent-oss/shared-workflows/.github/workflows/docker-push-to-registries.yml@main
    with:
      APP_NAME: ${{ needs.app_details.outputs.app_name }}
      DOCKERFILE: Dockerfile
      PATH: .
      VERSION: ${{ needs.app_details.outputs.current_version }}
      BUILD_ARTIFACT: build
      ENABLE_BUILDKIT_CACHE: false
      BUILD_ARGS: |
        APP_NAME=${{ needs.app_details.outputs.app_name }}
      GRYPE_SECURITY_ISSUES_BLOCK_ONLY_IF_FIX_AVAILABLE: false
    secrets: inherit